
## Add keys to the audit rules below using the -k option to allow for more
## organized and quicker searches with the ausearch tool.  See auditctl(8)
## and ausearch(8) for more information.

# Remove any existing rules
-D

/# Increase buffer size to handle the increased number of messages.
-b 16384

# Failure of auditd causes a kernel panic
-f 2

## (GEN002740: CAT II) The SA will configure the auditing system to audit
## discretionary access control permission modification (unsuccessful and
## successful use of chown/chmod)
## OVAL CHECK: audit_rules_dac_modification

<% if architecture=="x86_64" %>
-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod

-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod

-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
<% end %>

<% if architecture!="x86_64" %>
-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod

-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod

-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
<% end %>


## (GEN002720: CAT II) The SA will configure the auditing system to audit
## files and programs deleted by the user (successful and unsuccessful)
## OVAL CHECK: audit_rules_file_deletion_events
## TODO: add symlink check to OVAL
<% if architecture=="x86_64" %>
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -S rmdir -F auid>=500 -F auid!=4294967295 -k deleted
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -S rmdir -F auid>=500 -F auid!=4294967295 -k deleted

-a always,exit -F arch=b32 -S link -S symlink -S acct -F auid>=500 -F auid!=4294967295 -k created
-a always,exit -F arch=b64 -S link -S symlink -S acct -F auid>=500 -F auid!=4294967295 -k created
<% end %>

<% if architecture!="x86_64" %>
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k deleted

-a always,exit -F arch=b32 -S link -S symlink -S acct -F auid>=500 -F auid!=4294967295 -k created
<% end %>



## (GEN002800)The SA will configure the auditing system to audit
## logon (unsuccessful and successful) and logout (successful)
## OVAL CHECK: audit_rules_login_events
-w /bin/login -p x
-w /bin/logout -p x

##
##
## OVAL CHECK: audit_rules_mac_modification
-w /etc/selinux/ -p wa -k mac-mod

##
##
## OVAL CHECK: audit_rules_media_export
<% if architecture=="x86_64"%>
-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k media-export
-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k media-export
<%end>

<% if architecture!="x86_64"%>
-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k media-export
<%end>
##
##
## OVAL CHECK: audit_rules_networkconfig_modification
<% if architecture=="x86_64" %>
-a exit,always -F arch=b64 -S sethostname -S setdomainname -k net-mod
-a exit,always -F arch=b32 -S sethostname -S setdomainname -k net-mod
<%end%>

<% if architecture!="x86_64" %>
-a exit,always -F arch=b32 -S sethostname -S setdomainname -k net-mod
<%end%>

-w /etc/issue -p wa -k net-mod
-w /etc/issue.net -p wa -k net-mod
-w /etc/sysconfig/network -p wa -k net-mod
 
##
##
## OVAL CHECK: audit_rules_privileged_commands
-a always,exit -F path=/bin/ping -F perm=x -F auid>=500 auid!=4294967295 -k priv-commands

##
##
## OVAL CHECK: audit_rules_record_timechange
<% if architecture=="x86_64" %>
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -S clock_settime -k time
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -S stime -S clock_settime -k time
<%end>

<% if architecture=="x86_64" %>
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -S clock_settime -k time
<%end>

-w /etc/localtime -p wa -k time

##
##
## OVAL CHECK: audit_rules_session_events

-w /var/log/btmp -p wa -k session-events
-w /var/run/utmp -p wa -k session-events
-w /var/log/wtmp -p wa -k session-events

##
##
## OVAL CHECK: audit_rules_sysadmin_actions

-w /etc/sudoers -p wa -k admin-actions

##
##
## OVAL CHECK: audit_rules_unsuccessful_file_modification

<% if architecture=="x86_64"%>
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k file-mod
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k file-mod

-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate exit=-EPERM -F auid>=500 -F auid!=4294967295 -k file-mod
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate exit=-EPERM -F auid>=500 -F auid!=4294967295 -k file-mod
<%end%>

<% if architecture!="x86_64" %>
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit -EACCES -F auid>=500 -F auid!=4294967295 -k file-mod

-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate exit=-EPERM -F auid>=500 -F auid!=4294967295 -k file-mod
<%end%>

##
##
## OVAL CHECK: audit_rules_usergroup_modification

-w /etc/passwd -p wa -k usergrp-mod
-w /etc/gshadow -p wa -k usergrp-mod
-w /etc/shadow -p wa -k usergrp-mod
-w /etc/security/opasswd -p wa -k usergrp-mod

##
##
## OVAL CHECK: audit_rules_immutable
-e 2

