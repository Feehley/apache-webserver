## <summary>The SecState SCAP audit and remediation tool</summary>

########################################
## <summary>
##	Execute secstate in the secstate_t domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`secstate_domtrans',`
	gen_require(`
		type secstate_t, secstate_exec_t;
	')

	domtrans_pattern($1, secstate_exec_t, secstate_t)
')

########################################
## <summary>
##	Execute secstate in the secstate domain, and
##	allow the specified role the secstate domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`secstate_run',`
	gen_require(`
		type secstate_t;
	')
	secstate_domtrans($1)
	oscap_probe_role_assoc($2)
	role $2 types secstate_t;
')

########################################
## <summary>
##	Allow secstate domain gettatr perms on var_log and audit_log.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed permissions
##	</summary>
## </param>
#
interface(`secstate_manage_all_files_except',`
        gen_require(`
		type secstate_t;
                type shadow_t;
		type var_log_t;
		type auditd_log_t;
        ')
	
	files_manage_all_files($1, { -shadow_t -var_log_t -auditd_log_t })
	allow $1 { shadow_t var_log_t auditd_log_t }:file getattr;
')

